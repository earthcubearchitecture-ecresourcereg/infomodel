{
  "@context": {
    "@vocab": "http://schema.org/",
	"ecrro:":"http://purl.obolibrary.org/obo/ECRRO#"
  },
  "@id": "http://portal.chordsrt.com/api/v1/data",
  "@type": "WebAPI",
  "serviceType": "ecrro:chordsapiv1",  #should reference an API specification in the EC resource registry
  "name": "Download data from NCAR EarthCube CHORDS",
  "documentation": "http://portal.chordsrt.com/about/data_urls",
  "description":"NOTE--THIS DOCUMENT INCLUDES COMMENTS PREFIXED BY #, SO IT ISN'T VALID JSON.  URL based API to access data from real time instruments and sensors; A specification for the API could not be found, but examples at the documentation link above can be reverse engineers without too much trouble. This document describes a particular service instance",
  "potentialAction": [
    {
      "@type": "SearchAction",
      "name": "Download Multiple Instrument Data: all instruments",
	  "description": "Download all instruments for past 24 hours.",
      "result": {
        "@type": "DataDownload",
        "encodingFormat": ["application/json", "application/geo+json"]   #for better interoperability and targeting software applications, need a more granular specification of the encoding that defines the JSON key vocabulary and semantics, vocabularies used to populate property values, and conventions for syntax.
		
      },
      "target": {
        "@type": "EntryPoint",
        "urlTemplate": "http://portal.chordsrt.com/api/v1/data.{encoding}",
        "httpMethod": "GET",
		"contentType": ["application/json", "application/geo+json"]  #supported mime type of response; implication is that this would be use in http header?
      },
      "query-input": [
        {
          "@id": "http://portal.chordsrt.com/about/data_urls#encoding",
          "@type": "PropertyValueSpecification",
          "valueName": "encoding",
          "description": "The encoding format of the data",
          "valueRequired": true,
          "valuePattern": "(''|geojson|json)"
        }
      ],
      "object": {
        "@type": "DataFeed",  #is this useful information that hasn't  already been provided here?
		"description":"what would be useful here is a listing of the instruments that support the feed, and the variables measured.",
		"variableMeasured":{
			"@type":"PropertyValue",
			"name":"name of the variable",
			"description":"example of documentation for a varible provided in the result.dataDownload",
			"propertyID":"URI for the property in some ontology",
			"measurementTechnique":"URI for the measurement protocol, or text description of procedure and sensor"
		}
      }
    },
    {
      "@type": "SearchAction",
      "name": "Get data acquired from multiple instruments for date range",
	  "description": "Download multiple instruments w/ instrument ids bounded by an optional start and/or end date",
      "result": {
        "@type": "DataDownload",
        "encodingFormat": ["application/json", "application/geo+json"]  
      },
      "target": {
        "@type": "EntryPoint",
        "urlTemplate": "http://portal.chordsrt.com/api/v1/data.{encoding}?instruments={instruments}&start={start}&end={end}",
        "httpMethod": "GET"
      },
      "query-input": [
        {# do these kind of cross references work in JSON-LD????
          "@id": "http://portal.chordsrt.com/about/data_urls#encoding"
        },
        {
          "@id": "http://portal.chordsrt.com/about/data_urls#instruments",
          "@type": "PropertyValueSpecification",
          "valueName": "instruments",
          "description": "A comma-separated list of instrument identifiers. Instrument identifiers for this end point are integers between 1 and 6",
		  "minValue":1,
		  "maxValue":6,
          "valueRequired": true
        },
        {
          "@id": "http://portal.chordsrt.com/about/data_urls#start",
          "@type": "PropertyValueSpecification",
          "valueName": "start",
          "description": "A start time for the returned measurements. use xsd:dateTime format",
          "valueRequired": false,
          "valuePattern": "(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(.[0-9]+)?"
        },
        {
          "@id": "http://portal.chordsrt.com/about/data_urls#end",
          "@type": "PropertyValueSpecification",
          "valueName": "end",
          "description": "An end time for the returned measurements. use xsd:dateTime format",
          "valueRequired": false,
          "valuePattern": "(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(.[0-9]+)?"
        }
      ],
      "object": {  #its not clear to me what the purpose of having these '-input' elements here is; see object is last entry above, where suggest that should describe the variableMeasured that are reported by the DataFeed
        "@type": "DataFeed",
        "encodingFormat-input": { "@id": "http://portal.chordsrt.com/about/data_urls#encoding" },
        "identifier-input": { "@id": "http://portal.chordsrt.com/about/data_urls#instruments" },
		#these are instrument identifiers, not identifiers for the DataFeed, seems like this would be confusing
        "temporalCoverage-input": [ #not consistent with 'a textual string indicating a time period in ISO 8601 time interval format. '
          { "@id": "http://portal.chordsrt.com/about/data_urls#start" },
          { "@id": "http://portal.chordsrt.com/about/data_urls#end" }
        ]
      }
    },
	{
	"@type": "SearchAction",
	      "name": "Download Single Instrument Data",
	  "description": "data from a single instrument in an optional start and/or end date",
      "result": {
        "@type": "DataDownload",
        "encodingFormat": ["GeoCSV2.0", "application/geo+json"]  #for better interoperability and targeting software applications, need a more granular specification of the encoding that defines the JSON key vocabulary and semantics, vocabularies used to populate property values, and conventions for syntax.
      },
      "target": {
        "@type": "EntryPoint",
        "urlTemplate": "http://portal.chordsrt.com/api/v1/data/{instrumentID}.{encoding}?start={start}&end={end}&last",
        "httpMethod": "GET"
      },
      "query-input": [
        {
          "@type": "PropertyValueSpecification",
          "valueName": "encoding",
          "description": "The encoding format of the data",
          "valueRequired": true,
          "valuePattern": "(''|csv|geojson)"
        },
        {
          "@id": "http://portal.chordsrt.com/about/data_urls#start"
        },
        {
          "@id": "http://portal.chordsrt.com/about/data_urls#end"
        },
        {
          "@type": "PropertyValueSpecification",
          "valueName": "last",  #not clear how to deal with this kind of parameter-- is a flag with no value, and invalidates other parameters (start, end) if present
          "description": "optional property, if used, start and end are ignored. Simply include the parameter with no value to indicate that the most recent value(s) from the instrument should be reported",
          "valueRequired": false
        }
      ],
      "object": {  #its not clear to me what the purpose of having these '-input' elements here is; see object is last entry above, where suggest that should describe the variableMeasured that are reported by the DataFeed
        "@type": "DataFeed",
        "encodingFormat-input": { "@id": "http://portal.chordsrt.com/about/data_urls#encoding" },
        "temporalCoverage-input": [ #not consistent with 'a textual string indicating a time period in ISO 8601 time interval format. '
          { "@id": "http://portal.chordsrt.com/about/data_urls#start" },
          { "@id": "http://portal.chordsrt.com/about/data_urls#end" }
        ]
      }
    }
  ]
}
